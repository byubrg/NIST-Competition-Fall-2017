left_join(merged_genus) %>%
left_join(gen_test) %>%
mutate(Correct = (Genus == Actual))
compare <-
d %>%
group_by(Actual, Genus) %>%
count()
correct <- d %>%
group_by(Actual) %>%
summarise(Correct = mean(Correct))
return(list(compare = compare, correct = correct))
}
mlp_gen_info <- get_genus_info(mlp_gen_pred, gen_actual)
mlp_sp_info <- get_species_info(mlp_sp_pred, sp_actual)
rf_gen_info <- get_genus_info(rf_gen_pred, gen_actual)
rf_sp_info <- get_species_info(rf_sp_pred, sp_actual)
svm_gen_info <- get_genus_info(svm_gen_pred, gen_actual)
svm_sp_info <- get_species_info(svm_sp_pred, sp_actual)
correct_sp <- full_join(svm_sp_info$correct, rf_sp_info$correct, by = "Actual") %>%
full_join(mlp_sp_info$correct, by = "Actual") %>%
rename(SVM = Correct.x, RF = Correct.y, MLP = Correct)
compare_sp <- full_join(svm_sp_info$compare, rf_sp_info$compare, by = c("Actual", "Species")) %>%
full_join(mlp_sp_info$compare, by = c("Actual", "Species")) %>%
rename(SVM = n.x, RF = n.y, MLP = n)
correct_gen <- full_join(svm_gen_info$correct, rf_gen_info$correct, by = "Actual") %>%
full_join(mlp_gen_info$correct, by = "Actual") %>%
rename(SVM = Correct.x, RF = Correct.y, MLP = Correct)
compare_gen <- full_join(svm_gen_info$compare, rf_gen_info$compare, by = c("Actual", "Genus")) %>%
full_join(mlp_gen_info$compare, by = c("Actual", "Genus")) %>%
rename(SVM = n.x, RF = n.y, MLP = n)
library(reshape2)
tidy_correct_sp <-
correct_sp %>%
melt()
tidy_compare_sp <-
compare_sp %>%
melt()
tidy_correct_gen <-
correct_gen %>%
melt()
tidy_compare_gen <-
compare_gen %>%
melt()
rf_sp_info
rf_sp_pred
sp_actual
sp_actual %>%
count()
sp_actual %>%
table()
sp_actual$Actual %>%
table()
sp_actual$Actual %>%
count()
sp_actual$Actual %>%
table()
sp_actual
sp_actual$Actual %>%
table()
sp_counts <-
sp_actual$Actual %>%
table()
sp_counts
type(sp_counts)
typeof(sp_counts)
class(sp_counts)
sp_counts[1]
sp_counts[[1]]
sp_counts
sp_counts[["ACRU"]]
mlp_gen_info
mlp_sp_info
mlp_sp_info %>%
mutate(Actual = map_chr(Actual, ~{sp_counts[[.x]]}))
map_chr(Actual, ~{sp_counts[[.x]]})
map_chr(mlp_sp_info$Actual, ~{sp_counts[[.x]]})
mlp_sp_info$Actual
mlp_sp_info
mlp_sp_info$Actual
mlp_sp_info
mlp_sp_info[["Actual"]
mlp_sp_info[["Actual"]]
mlp_sp_info
names(mlp_sp_info)
map_chr(mlp_sp_info$correct$Actual, ~{sp_counts[[.x]]})
map_chr(mlp_sp_info$correct$Actual, ~{paste0(.x, "\n(n = ", sp_counts[[.x]]}, ")")
map_chr(mlp_sp_info$correct$Actual, ~{paste0(.x, "\n(n = ", sp_counts[[.x]], ")")})
mlp_sp_info$correct %>%
mutate(Actual = map_chr(mlp_sp_info$correct$Actual, ~{paste0(.x, "\n(n = ", sp_counts[[.x]], ")")}))
library(tidyverse)
get_species_info <- function(merged_species, sp_test) {
d <-
merged_species %>%
group_by(Crown_id) %>%
summarise(Probability = max(Probability)) %>%
left_join(merged_species) %>%
left_join(sp_test) %>%
mutate(Correct = (Species == Actual))
sp_counts <-
sp_actual$Actual %>%
table()
d <-
d %>%
mutate(Actual = map_chr(d$Actual, ~{paste0(.x, "\n(n = ", sp_counts[[.x]], ")")}))
compare <-
d %>%
group_by(Actual, Species) %>%
count()
correct <- d %>%
group_by(Actual) %>%
summarise(Correct = mean(Correct))
return(list(compare = compare, correct = correct))
}
get_genus_info <- function(merged_genus, gen_test) {
d <-
merged_genus %>%
group_by(Crown_id) %>%
summarise(Probability = max(Probability)) %>%
left_join(merged_genus) %>%
left_join(gen_test) %>%
mutate(Correct = (Genus == Actual))
compare <-
d %>%
group_by(Actual, Genus) %>%
count()
correct <- d %>%
group_by(Actual) %>%
summarise(Correct = mean(Correct))
return(list(compare = compare, correct = correct))
}
library(tidyverse)
get_species_info <- function(merged_species, sp_test) {
d <-
merged_species %>%
group_by(Crown_id) %>%
summarise(Probability = max(Probability)) %>%
left_join(merged_species) %>%
left_join(sp_test) %>%
mutate(Correct = (Species == Actual))
sp_counts <-
sp_test$Actual %>%
table()
d <-
d %>%
mutate(Actual = map_chr(d$Actual, ~{paste0(.x, "\n(n = ", sp_counts[[.x]], ")")}))
compare <-
d %>%
group_by(Actual, Species) %>%
count()
correct <- d %>%
group_by(Actual) %>%
summarise(Correct = mean(Correct))
return(list(compare = compare, correct = correct))
}
get_genus_info <- function(merged_genus, gen_test) {
d <-
merged_genus %>%
group_by(Crown_id) %>%
summarise(Probability = max(Probability)) %>%
left_join(merged_genus) %>%
left_join(gen_test) %>%
mutate(Correct = (Genus == Actual))
compare <-
d %>%
group_by(Actual, Genus) %>%
count()
correct <- d %>%
group_by(Actual) %>%
summarise(Correct = mean(Correct))
return(list(compare = compare, correct = correct))
}
mlp_sp_info <- get_species_info(mlp_sp_pred, sp_actual)
mlp_sp_info
mlp_gen_info <- get_genus_info(mlp_gen_pred, gen_actual)
mlp_sp_info <- get_species_info(mlp_sp_pred, sp_actual)
rf_gen_info <- get_genus_info(rf_gen_pred, gen_actual)
rf_sp_info <- get_species_info(rf_sp_pred, sp_actual)
svm_gen_info <- get_genus_info(svm_gen_pred, gen_actual)
svm_sp_info <- get_species_info(svm_sp_pred, sp_actual)
# sp_counts <-
#   sp_actual$Actual %>%
#   table()
#
# mlp_sp_info$correct %>%
#   mutate(Actual = map_chr(mlp_sp_info$correct$Actual, ~{paste0(.x, "\n(n = ", sp_counts[[.x]], ")")}))
correct_sp <- full_join(svm_sp_info$correct, rf_sp_info$correct, by = "Actual") %>%
full_join(mlp_sp_info$correct, by = "Actual") %>%
rename(SVM = Correct.x, RF = Correct.y, MLP = Correct)
compare_sp <- full_join(svm_sp_info$compare, rf_sp_info$compare, by = c("Actual", "Species")) %>%
full_join(mlp_sp_info$compare, by = c("Actual", "Species")) %>%
rename(SVM = n.x, RF = n.y, MLP = n)
correct_gen <- full_join(svm_gen_info$correct, rf_gen_info$correct, by = "Actual") %>%
full_join(mlp_gen_info$correct, by = "Actual") %>%
rename(SVM = Correct.x, RF = Correct.y, MLP = Correct)
compare_gen <- full_join(svm_gen_info$compare, rf_gen_info$compare, by = c("Actual", "Genus")) %>%
full_join(mlp_gen_info$compare, by = c("Actual", "Genus")) %>%
rename(SVM = n.x, RF = n.y, MLP = n)
library(reshape2)
tidy_correct_sp <-
correct_sp %>%
melt()
tidy_compare_sp <-
compare_sp %>%
melt()
tidy_correct_gen <-
correct_gen %>%
melt()
tidy_compare_gen <-
compare_gen %>%
melt()
library(ggplot2)
correct_graph <- function(d, type, amount, text_size, plot_title) {
ggplot(d, aes(x=Actual, y=value, fill=factor(variable))) +
geom_bar(stat="identity", position="dodge", colour="black") +
labs(x = type, y = "Accuracy", title = plot_title) +
guides(fill=guide_legend(title="Algorithms")) +
geom_text(aes(fill=variable, label=round(value, 1)), color = rep(c("white","black","black"), amount), position=position_dodge(width=0.9), vjust=2, size = text_size) +
geom_text(aes(fill=variable, label=variable), color= rep(c("white","black","black"), amount), position=position_dodge(width=.9), vjust=5, size = text_size) +
scale_fill_manual("legend", values = c("MLP" = "#000270", "RF" = "#c0d4e0", "SVM" = "#c0d4e0")) +
theme_classic() +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.line.y=element_blank(),
plot.title = element_text(hjust = 0.5, size=19, face="bold"),
legend.position="none",
axis.text.x=element_text(size=14),
axis.title=element_text(size=16,face="bold"))
}
correct_sp_graph <- correct_graph(tidy_correct_sp, "Species", 9, 2, "Accuracy of Algorithms Across Species")
correct_gen_graph <- correct_graph(tidy_correct_gen, "Genus", 5, 4, "Accuracy of Algorithms Across Genus")
ggsave("accuracy_species_graph.png", correct_sp_graph, width = 7, height = 5)
ggsave("accuracy_genus_graph.png", correct_gen_graph, width = 7, height = 5)
correct_sp_graph
correct_gen_graph
mlp_gen_info <- get_genus_info(mlp_gen_pred, gen_actual)
mlp_sp_info <- get_species_info(mlp_sp_pred, sp_actual)
rf_gen_info <- get_genus_info(rf_gen_pred, gen_actual)
rf_sp_info <- get_species_info(rf_sp_pred, sp_actual)
svm_gen_info <- get_genus_info(svm_gen_pred, gen_actual)
svm_sp_info <- get_species_info(svm_sp_pred, sp_actual)
# sp_counts <-
#   sp_actual$Actual %>%
#   table()
#
# mlp_sp_info$correct %>%
#   mutate(Actual = map_chr(mlp_sp_info$correct$Actual, ~{paste0(.x, "\n(n=", sp_counts[[.x]], ")")}))
correct_sp <- full_join(svm_sp_info$correct, rf_sp_info$correct, by = "Actual") %>%
full_join(mlp_sp_info$correct, by = "Actual") %>%
rename(SVM = Correct.x, RF = Correct.y, MLP = Correct)
compare_sp <- full_join(svm_sp_info$compare, rf_sp_info$compare, by = c("Actual", "Species")) %>%
full_join(mlp_sp_info$compare, by = c("Actual", "Species")) %>%
rename(SVM = n.x, RF = n.y, MLP = n)
correct_gen <- full_join(svm_gen_info$correct, rf_gen_info$correct, by = "Actual") %>%
full_join(mlp_gen_info$correct, by = "Actual") %>%
rename(SVM = Correct.x, RF = Correct.y, MLP = Correct)
compare_gen <- full_join(svm_gen_info$compare, rf_gen_info$compare, by = c("Actual", "Genus")) %>%
full_join(mlp_gen_info$compare, by = c("Actual", "Genus")) %>%
rename(SVM = n.x, RF = n.y, MLP = n)
library(reshape2)
tidy_correct_sp <-
correct_sp %>%
melt()
tidy_compare_sp <-
compare_sp %>%
melt()
tidy_correct_gen <-
correct_gen %>%
melt()
tidy_compare_gen <-
compare_gen %>%
melt()
library(tidyverse)
get_species_info <- function(merged_species, sp_test) {
d <-
merged_species %>%
group_by(Crown_id) %>%
summarise(Probability = max(Probability)) %>%
left_join(merged_species) %>%
left_join(sp_test) %>%
mutate(Correct = (Species == Actual))
sp_counts <-
sp_test$Actual %>%
table()
d <-
d %>%
mutate(Actual = map_chr(d$Actual, ~{paste0(.x, "\n(n=", sp_counts[[.x]], ")")}))
compare <-
d %>%
group_by(Actual, Species) %>%
count()
correct <- d %>%
group_by(Actual) %>%
summarise(Correct = mean(Correct))
return(list(compare = compare, correct = correct))
}
get_genus_info <- function(merged_genus, gen_test) {
d <-
merged_genus %>%
group_by(Crown_id) %>%
summarise(Probability = max(Probability)) %>%
left_join(merged_genus) %>%
left_join(gen_test) %>%
mutate(Correct = (Genus == Actual))
compare <-
d %>%
group_by(Actual, Genus) %>%
count()
correct <- d %>%
group_by(Actual) %>%
summarise(Correct = mean(Correct))
return(list(compare = compare, correct = correct))
}
mlp_gen_info <- get_genus_info(mlp_gen_pred, gen_actual)
mlp_sp_info <- get_species_info(mlp_sp_pred, sp_actual)
rf_gen_info <- get_genus_info(rf_gen_pred, gen_actual)
rf_sp_info <- get_species_info(rf_sp_pred, sp_actual)
svm_gen_info <- get_genus_info(svm_gen_pred, gen_actual)
svm_sp_info <- get_species_info(svm_sp_pred, sp_actual)
# sp_counts <-
#   sp_actual$Actual %>%
#   table()
#
# mlp_sp_info$correct %>%
#   mutate(Actual = map_chr(mlp_sp_info$correct$Actual, ~{paste0(.x, "\n(n=", sp_counts[[.x]], ")")}))
correct_sp <- full_join(svm_sp_info$correct, rf_sp_info$correct, by = "Actual") %>%
full_join(mlp_sp_info$correct, by = "Actual") %>%
rename(SVM = Correct.x, RF = Correct.y, MLP = Correct)
compare_sp <- full_join(svm_sp_info$compare, rf_sp_info$compare, by = c("Actual", "Species")) %>%
full_join(mlp_sp_info$compare, by = c("Actual", "Species")) %>%
rename(SVM = n.x, RF = n.y, MLP = n)
correct_gen <- full_join(svm_gen_info$correct, rf_gen_info$correct, by = "Actual") %>%
full_join(mlp_gen_info$correct, by = "Actual") %>%
rename(SVM = Correct.x, RF = Correct.y, MLP = Correct)
compare_gen <- full_join(svm_gen_info$compare, rf_gen_info$compare, by = c("Actual", "Genus")) %>%
full_join(mlp_gen_info$compare, by = c("Actual", "Genus")) %>%
rename(SVM = n.x, RF = n.y, MLP = n)
library(reshape2)
tidy_correct_sp <-
correct_sp %>%
melt()
tidy_compare_sp <-
compare_sp %>%
melt()
tidy_correct_gen <-
correct_gen %>%
melt()
tidy_compare_gen <-
compare_gen %>%
melt()
library(ggplot2)
correct_graph <- function(d, type, amount, text_size, plot_title) {
ggplot(d, aes(x=Actual, y=value, fill=factor(variable))) +
geom_bar(stat="identity", position="dodge", colour="black") +
labs(x = type, y = "Accuracy", title = plot_title) +
guides(fill=guide_legend(title="Algorithms")) +
geom_text(aes(fill=variable, label=round(value, 1)), color = rep(c("white","black","black"), amount), position=position_dodge(width=0.9), vjust=2, size = text_size) +
geom_text(aes(fill=variable, label=variable), color= rep(c("white","black","black"), amount), position=position_dodge(width=.9), vjust=5, size = text_size) +
scale_fill_manual("legend", values = c("MLP" = "#000270", "RF" = "#c0d4e0", "SVM" = "#c0d4e0")) +
theme_classic() +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.line.y=element_blank(),
plot.title = element_text(hjust = 0.5, size=19, face="bold"),
legend.position="none",
axis.text.x=element_text(size=14),
axis.title=element_text(size=16,face="bold"))
}
correct_sp_graph <- correct_graph(tidy_correct_sp, "Species", 9, 2, "Accuracy of Algorithms Across Species")
correct_gen_graph <- correct_graph(tidy_correct_gen, "Genus", 5, 4, "Accuracy of Algorithms Across Genus")
ggsave("accuracy_species_graph.png", correct_sp_graph, width = 7, height = 5)
ggsave("accuracy_genus_graph.png", correct_gen_graph, width = 7, height = 5)
correct_sp_graph
correct_gen_graph
library(tidyverse)
get_species_info <- function(merged_species, sp_test) {
d <-
merged_species %>%
group_by(Crown_id) %>%
summarise(Probability = max(Probability)) %>%
left_join(merged_species) %>%
left_join(sp_test) %>%
mutate(Correct = (Species == Actual))
sp_counts <-
sp_test$Actual %>%
table()
d <-
d %>%
mutate(Actual = map_chr(d$Actual, ~{paste0(.x, "\n(n=", sp_counts[[.x]], ")")}))
compare <-
d %>%
group_by(Actual, Species) %>%
count()
correct <- d %>%
group_by(Actual) %>%
summarise(Correct = mean(Correct))
return(list(compare = compare, correct = correct))
}
get_genus_info <- function(merged_genus, gen_test) {
d <-
merged_genus %>%
group_by(Crown_id) %>%
summarise(Probability = max(Probability)) %>%
left_join(merged_genus) %>%
left_join(gen_test) %>%
mutate(Correct = (Genus == Actual))
gen_counts <-
gen_test$Actual %>%
table()
d <-
d %>%
mutate(Actual = map_chr(d$Actual, ~{paste0(.x, "\n(n=", gen_counts[[.x]], ")")}))
compare <-
d %>%
group_by(Actual, Genus) %>%
count()
correct <- d %>%
group_by(Actual) %>%
summarise(Correct = mean(Correct))
return(list(compare = compare, correct = correct))
}
mlp_gen_info <- get_genus_info(mlp_gen_pred, gen_actual)
mlp_sp_info <- get_species_info(mlp_sp_pred, sp_actual)
rf_gen_info <- get_genus_info(rf_gen_pred, gen_actual)
rf_sp_info <- get_species_info(rf_sp_pred, sp_actual)
svm_gen_info <- get_genus_info(svm_gen_pred, gen_actual)
svm_sp_info <- get_species_info(svm_sp_pred, sp_actual)
# sp_counts <-
#   sp_actual$Actual %>%
#   table()
#
# mlp_sp_info$correct %>%
#   mutate(Actual = map_chr(mlp_sp_info$correct$Actual, ~{paste0(.x, "\n(n=", sp_counts[[.x]], ")")}))
correct_sp <- full_join(svm_sp_info$correct, rf_sp_info$correct, by = "Actual") %>%
full_join(mlp_sp_info$correct, by = "Actual") %>%
rename(SVM = Correct.x, RF = Correct.y, MLP = Correct)
compare_sp <- full_join(svm_sp_info$compare, rf_sp_info$compare, by = c("Actual", "Species")) %>%
full_join(mlp_sp_info$compare, by = c("Actual", "Species")) %>%
rename(SVM = n.x, RF = n.y, MLP = n)
correct_gen <- full_join(svm_gen_info$correct, rf_gen_info$correct, by = "Actual") %>%
full_join(mlp_gen_info$correct, by = "Actual") %>%
rename(SVM = Correct.x, RF = Correct.y, MLP = Correct)
compare_gen <- full_join(svm_gen_info$compare, rf_gen_info$compare, by = c("Actual", "Genus")) %>%
full_join(mlp_gen_info$compare, by = c("Actual", "Genus")) %>%
rename(SVM = n.x, RF = n.y, MLP = n)
library(reshape2)
tidy_correct_sp <-
correct_sp %>%
melt()
tidy_compare_sp <-
compare_sp %>%
melt()
tidy_correct_gen <-
correct_gen %>%
melt()
tidy_compare_gen <-
compare_gen %>%
melt()
library(ggplot2)
correct_graph <- function(d, type, amount, text_size, plot_title) {
ggplot(d, aes(x=Actual, y=value, fill=factor(variable))) +
geom_bar(stat="identity", position="dodge", colour="black") +
labs(x = type, y = "Accuracy", title = plot_title) +
guides(fill=guide_legend(title="Algorithms")) +
geom_text(aes(fill=variable, label=round(value, 1)), color = rep(c("white","black","black"), amount), position=position_dodge(width=0.9), vjust=2, size = text_size) +
geom_text(aes(fill=variable, label=variable), color= rep(c("white","black","black"), amount), position=position_dodge(width=.9), vjust=5, size = text_size) +
scale_fill_manual("legend", values = c("MLP" = "#000270", "RF" = "#c0d4e0", "SVM" = "#c0d4e0")) +
theme_classic() +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.line.y=element_blank(),
plot.title = element_text(hjust = 0.5, size=19, face="bold"),
legend.position="none",
axis.text.x=element_text(size=14),
axis.title=element_text(size=16,face="bold"))
}
correct_sp_graph <- correct_graph(tidy_correct_sp, "Species", 9, 2, "Accuracy of Algorithms Across Species")
correct_gen_graph <- correct_graph(tidy_correct_gen, "Genus", 5, 4, "Accuracy of Algorithms Across Genus")
ggsave("accuracy_species_graph.png", correct_sp_graph, width = 7, height = 5)
ggsave("accuracy_genus_graph.png", correct_gen_graph, width = 7, height = 5)
correct_sp_graph
correct_gen_graph
library(ggplot2)
correct_graph <- function(d, type, amount, text_size, plot_title) {
ggplot(d, aes(x=Actual, y=value, fill=factor(variable))) +
geom_bar(stat="identity", position="dodge", colour="black") +
labs(x = type, y = "Accuracy", title = plot_title) +
guides(fill=guide_legend(title="Algorithms")) +
geom_text(aes(fill=variable, label=round(value, 2)), color = rep(c("white","black","black"), amount), position=position_dodge(width=0.9), vjust=2, size = text_size) +
geom_text(aes(fill=variable, label=variable), color= rep(c("white","black","black"), amount), position=position_dodge(width=.9), vjust=5, size = text_size) +
scale_fill_manual("legend", values = c("MLP" = "#000270", "RF" = "#c0d4e0", "SVM" = "#c0d4e0")) +
theme_classic() +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.line.y=element_blank(),
plot.title = element_text(hjust = 0.5, size=19, face="bold"),
legend.position="none",
axis.text.x=element_text(size=14),
axis.title=element_text(size=16,face="bold"))
}
correct_sp_graph <- correct_graph(tidy_correct_sp, "Species", 9, 2, "Accuracy of Algorithms Across Species")
correct_gen_graph <- correct_graph(tidy_correct_gen, "Genus", 5, 4, "Accuracy of Algorithms Across Genus")
ggsave("accuracy_species_graph.png", correct_sp_graph, width = 7, height = 5)
ggsave("accuracy_genus_graph.png", correct_gen_graph, width = 7, height = 5)
correct_sp_graph
correct_gen_graph
?sum
??sum
d <- "this"
rm d
rm(d)
Inf
getwd()
